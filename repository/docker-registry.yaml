---
# Simple Docker Registry Deployment for Kubernetes
# Uses PVC defined in monitoring/persistent-storage.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
  labels:
    name: docker-registry

---
# Docker Registry Deployment (with persistent storage)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: registry
          image: registry:2.8
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_ADDR
              value: "0.0.0.0:5000"
            - name: REGISTRY_HTTP_HEADERS_ACCESS-CONTROL-ALLOW-ORIGIN
              value: "[http://192.168.1.4:30501]"
            - name: REGISTRY_HTTP_HEADERS_ACCESS-CONTROL-ALLOW-METHODS
              value: "[HEAD,GET,OPTIONS,DELETE]"
            - name: REGISTRY_HTTP_HEADERS_ACCESS-CONTROL-ALLOW-CREDENTIALS
              value: "[true]"
            - name: REGISTRY_HTTP_HEADERS_ACCESS-CONTROL-ALLOW-HEADERS
              value: "[Authorization,Accept,Cache-Control]"
            - name: REGISTRY_HTTP_HEADERS_ACCESS-CONTROL-EXPOSE-HEADERS
              value: "[Docker-Content-Digest]"
          volumeMounts:
            - name: registry-data
              mountPath: /var/lib/registry
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /v2/
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v2/
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: registry-data
          persistentVolumeClaim:
            claimName: registry-data-pvc

---
# Service for Docker Registry
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  type: NodePort
  ports:
    - name: registry
      port: 5000
      targetPort: 5000
      nodePort: 30500
      protocol: TCP

---
# Optional: Registry UI for easier management
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-ui
  namespace: docker-registry
  labels:
    app: registry-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-ui
  template:
    metadata:
      labels:
        app: registry-ui
    spec:
      containers:
        - name: registry-ui
          image: joxit/docker-registry-ui:latest
          ports:
            - containerPort: 80
          env:
            - name: REGISTRY_TITLE
              value: "VM Watcher Registry"
            - name: REGISTRY_URL
              value: "http://192.168.1.4:30500"
            - name: DELETE_IMAGES
              value: "true"
            - name: SHOW_CONTENT_DIGEST
              value: "true"
            - name: NGINX_PROXY_PASS_URL
              value: "http://docker-registry:5000"
            - name: SHOW_CATALOG_NB_TAGS
              value: "true"
            - name: CATALOG_MIN_BRANCHES
              value: "1"
            - name: CATALOG_MAX_BRANCHES
              value: "1"
            - name: TAGLIST_PAGE_SIZE
              value: "100"
            - name: REGISTRY_SECURED
              value: "false"
            - name: CATALOG_ELEMENTS_LIMIT
              value: "1000"
            - name: SINGLE_REGISTRY
              value: "true"
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Service for Registry UI
apiVersion: v1
kind: Service
metadata:
  name: registry-ui
  namespace: docker-registry
  labels:
    app: registry-ui
spec:
  selector:
    app: registry-ui
  type: NodePort
  ports:
    - name: ui
      port: 80
      targetPort: 80
      nodePort: 30501
      protocol: TCP
